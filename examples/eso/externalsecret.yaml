# Description: ExternalSecret that syncs secrets from Azure Key Vault to Kubernetes Secret

# SecretStore configuration for Azure Key Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: azure-keyvault-secretstore
  namespace: ${ESO_TEST_NAMESPACE}
  labels:
    app: external-secrets-examples
    component: secretstore
    example: externalsecret
spec:
  provider:
    azurekv:
      authSecretRef:
        clientId:
          name: azure-keyvault-sp
          key: client-id
        clientSecret:
          name: azure-keyvault-sp
          key: client-secret
      tenantId: "${AZURE_TENANT_ID}"
      vaultUrl: "https://${ACTUAL_KEYVAULT_NAME}.vault.azure.net"
      type: AzureKV
      environmentType: PublicCloud
---
# Service Principal secret referenced by SecretStore
apiVersion: v1
kind: Secret
metadata:
  name: azure-keyvault-sp
  namespace: ${ESO_TEST_NAMESPACE}
  labels:
    app: external-secrets-examples
    component: secret
type: Opaque
data:
  client-id: ${SERVICE_PRINCIPAL_CLIENT_ID_B64}
  client-secret: ${SERVICE_PRINCIPAL_CLIENT_SECRET_B64}
---
# ExternalSecret that syncs secrets from Key Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: hello-world-external-secrets
  namespace: ${ESO_TEST_NAMESPACE}
  labels:
    app: external-secrets-examples
    component: externalsecret
    example: externalsecret
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-secretstore
    kind: SecretStore
  target:
    name: hello-world-external-secrets-synced
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        database-password: "{{ index . \"database-password\" }}"
        api-key: "{{ index . \"api-key\" }}"
  data:
  - secretKey: database-password
    remoteRef:
      key: database-password
  - secretKey: api-key
    remoteRef:
      key: api-key

